{
  "uid" : "f8505dd0b7d97c9f",
  "name" : "重复注册：手机号相同，姓名不同",
  "fullName" : "register.test_03_register_repeat.TestRegister#test_register_1",
  "historyId" : "0e623dfa31b4cfe7ad6e964592c02123",
  "time" : {
    "start" : 1616746353145,
    "stop" : 1616746353205,
    "duration" : 60
  },
  "description" : "重复注册：手机号相同，姓名不同，预期第二次注册失败",
  "descriptionHtml" : "<p>重复注册：手机号相同，姓名不同，预期第二次注册失败</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'data': {}, ... 'status': 99} == {'data': {}, ...'status': 140}\n  Omitting 2 identical items, use -vv to show\n  Differing items:\n  {'status': 99} != {'status': 140}\n  Use -v to get the full diff",
  "statusTrace" : "self = <testcases.register.test_03_register_repeat.TestRegister object at 0x0000019E5E420C48>\n\n    @allure.story('用例-重复注册')\n    @allure.title('重复注册：手机号相同，姓名不同')\n    @allure.description('重复注册：手机号相同，姓名不同，预期第二次注册失败')\n    @pytest.mark.usefixtures('reset')\n    def test_register_1(self):\n        # 请求验证码并注册\n        verify_code_1 = get_verify_code('13800000099')\n        result_register_1 = register('美洋洋', '13800000099', verify_code_1)\n    \n        # 预期\n        assert result_register_1.json() == {\n            'status': 0,\n            'msg': 'ok',\n            'data': {\n                'agent_qr_code': AGENT_QR_CODE\n            }\n        }\n    \n        # 请求验证码并注册\n        verify_code_2 = get_verify_code('13800000099')\n        result_register_2 = register('懒洋洋', '13800000099', verify_code_2)\n    \n        # 预期\n>       assert result_register_2.json() == {\n            'status': 140,\n            'msg': '手机号已被注册',\n            'data': {}\n        }\nE       AssertionError: assert {'data': {}, ... 'status': 99} == {'data': {}, ...'status': 140}\nE         Omitting 2 identical items, use -vv to show\nE         Differing items:\nE         {'status': 99} != {'status': 140}\nE         Use -v to get the full diff\n\nD:\\workspace\\pytest\\testcases\\register\\test_03_register_repeat.py:78: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "reset",
    "time" : {
      "start" : 1616746353066,
      "stop" : 1616746353145,
      "duration" : 79
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "用户注册模块"
  }, {
    "name" : "epic",
    "value" : "saas 用户注册/登录功能测试"
  }, {
    "name" : "story",
    "value" : "用例-重复注册"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('reset')"
  }, {
    "name" : "parentSuite",
    "value" : "register"
  }, {
    "name" : "suite",
    "value" : "test_03_register_repeat"
  }, {
    "name" : "subSuite",
    "value" : "TestRegister"
  }, {
    "name" : "host",
    "value" : "DESKTOP-8VAC9PS"
  }, {
    "name" : "thread",
    "value" : "2284-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "register.test_03_register_repeat"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('reset')" ]
  },
  "source" : "f8505dd0b7d97c9f.json",
  "parameterValues" : [ ]
}